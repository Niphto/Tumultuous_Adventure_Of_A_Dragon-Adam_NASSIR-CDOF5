# -*- coding: utf-8 -*-
"""Game.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XwGDdwGng0a9lLiqQIKHinN9f8zrVopa
"""

Valid_choices={'Walk': "You've already walked so far, there is no end to this place. You're sure of it. You still walk forward for some reason.",
               'Lie Down': "You lie down. Your hair has long lost its blond luster, and now you're getting it even dirtier. But you don't care, why would you. Get up and walk.",
               'Scream': "You can't. Your voice was taken from you. All you can do is move forward.",
               'Cry': "Stop. You're pathetic. If you want to waste time crying, you might as well do something while wallowing in your sorrow. By something, I mean walking. Go on.",
               'Help': "This is what you can currently do : Walk, Lie Down, Scream, Cry"}

Count=0

print("You feel the ashes filling your lungs, your simple robe dirtied by mud and grime scraping against your skin. The land is barren spare for a few dilapidated buildings, although you cannot believe there once was a city where you now stand, it is incomprehensible for one to reach such a state of ruin, yet your eyes do not deceive you.")
while True:
  Choice=input("What will you do ? \n")

  if Choice in list(Valid_choices.keys()):
    act = Valid_choices[Choice]
    print(act)
    if Choice=='Walk':
      Count+=1
    if Count>=3:
      break

  else:
    print("Your choices are meaningless, but some are more than others. Choose again : ", list(Valid_choices.keys()))


def Pitiful_Start():
  print("W-what did I do?")
  print("The voice is puzzled, seemingly taken aback by your response to what it said. You couldn't help yourself for some reason, your tears just wanted to come out.")
  print("Alright, alright, settle down child. Sit down")
  print("You do as you're told, your tears still coming out while you comply.")

def Death():
  print("You've somehow died. Congratulations. This has always been thought to be impossible.")
Valid_choices={#'Fight': "Create a fighting mechanic",
               'Enter the Cage': ("You are swallowed up by the darkness, you succumb to deathly comfort.", Death),
               'Run Away': "You are terrified by what you're experiencing and your first instinct is to run as far away as you can from this place.",
               'Cry': Pitiful_Start,
               'Help': "This is what you can currently do : Fight, Enter the Cage, Run Away, Cry"}

print("You haven't given up and here you are, rewarded by a different sight. A cage that you can't see the top of, bars of metal so wide even five men couldn't wrap themselves around any of them. Inside, you see ripples, dark and purple ripples. There is no rhythm to them, yet you sense harmony emanating from this strange sight.")
print("Don't come closer.")
print("A voice, it's a voice ! You jump up in surprise and glee, you spin around multiple times, searching for the source of this voice. You get dizzy, of course.")
print("Idiot ! I'm right in front of you.")

while True:
  Choice=input("What will you do ? \n")

  if Choice in list(Valid_choices.keys()):
    if Choice=='Enter the Cage':
      text,act=Valid_choices[Choice]
      print(text)
      act()
      break
    act = Valid_choices[Choice]
    if Choice=='Cry':
      act()
      break
    else:
      print(act)

  else:
    print("Your choices are meaningless, but some are more than others. Choose again : ", list(Valid_choices.keys()))

class Inventory:
    def __init__(self):
        self.items = {}

    def add_item(self, item, quantity=1):
        self.items[item] = self.items.get(item, 0) + quantity

    def remove_item(self, item, quantity=1):
        if item in self.items:
            self.items[item] -= quantity
            if self.items[item] <= 0:
                del self.items[item]

    def __str__(self):
        return f"Inventory: {self.items}"

# Example of usage:
inventory = Inventory()
inventory.add_item("Key")
print(inventory)
